/*!
 * JavaScript Debug - v0.5 - 11/14/2013
 * 
 * Copyright (c) Edoardo Tenani
 * Dual licensed under the MIT and GPL licenses.
 * http://endorama.mit-license.org/
 * 
 * Thanks to Ben Alman and Paul Irish!
 * http://benalman.com/projects/javascript-debug-console-log/
 * http://paulirish.com/
 */
window.debug=(function(){var window=this,aps=Array.prototype.slice,con=window.console,that={},callback_func,callback_force,log_level=9,log_methods=['error','warn','info','debug','log'],pass_methods='assert clear count dir dirxml exception group groupCollapsed groupEnd profile profileEnd table time timeEnd trace'.split(' '),idx=pass_methods.length,logs=[];while(--idx>=0){(function(method){that[method]=function(){log_level!==0&&con&&con[method]&&con[method].apply(con,arguments)}})(pass_methods[idx])}idx=log_methods.length;while(--idx>=0){(function(idx,level){that[level]=function(){var args=aps.call(arguments);if(typeof printStackTrace!=='function'){throw"Stacktrace.js is required ( https://github.com/eriwen/javascript-stacktrace )"}else{var stacktrace=printStackTrace();stacktrace=stacktrace.split("\n");stacktrace[0]='Stacktrace printed';var caller_line=stacktrace[2];var index=caller_line.indexOf("at ");var clean=caller_line.slice(index+2,caller_line.length);args.stacktrace={caller:clean,stack:stacktrace}}var log_arr=[level].concat(args);logs.push(log_arr);exec_callback(log_arr);if(!con||!is_level(idx)){return}con.firebug?con[level].apply(window,args):con[level]?con[level](args):con.log(args)}})(idx,log_methods[idx])}function exec_callback(args){if(callback_func&&(callback_force||!con||!con.log)){callback_func.apply(window,args)}};that.setLevel=function(level){log_level=typeof level==='number'?level:9};function is_level(level){return log_level>0?log_level>level:log_methods.length+log_level<=level};that.setCallback=function(){var args=aps.call(arguments),max=logs.length,i=max;callback_func=args.shift()||null;callback_force=typeof args[0]==='boolean'?args.shift():false;i-=typeof args[0]==='number'?args.shift():max;while(i<max){exec_callback(logs[i++])}};return that})();
